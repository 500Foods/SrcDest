name: Build Linux x86

on:
  workflow_dispatch:
  workflow_call:

jobs:

  build:
    name: Build Linux 32-bit
    runs-on: ubuntu-latest
    container: i386/ubuntu:latest
    continue-on-error: true
    
    steps:
    - name: Install git
      run: |
        apt-get update
        apt-get install -y git

            
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y build-essential libsqlite3-dev libxxhash-dev libjansson-dev libwebsockets-dev fswatch libcurl4-openssl-dev libssl-dev
        
    - name: Find fswatch library
      run: |
        dpkg -s fswatch
        dpkg -L fswatch
        fswatch_lib=$(dpkg -L fswatch | grep 'libfswatch\.so' | head -n 1)
        fswatch_inc=$(dpkg -L fswatch | grep 'cevent\.h' | head -n 1 | xargs dirname)
        echo "FSWATCH_LIB=-L$(dirname $fswatch_lib)" >> $GITHUB_ENV
        echo "FSWATCH_INC=-I$fswatch_inc" >> $GITHUB_ENV
        
    - name: Build agentc
      working-directory: ./AgentC
      run: gcc agentc.c -o agentc -lsqlite3 -lxxhash -ljansson -lwebsockets ${{ env.FSWATCH_LIB }} -lfswatch ${{ env.FSWATCH_INC }} -lcurl -lssl -lcrypto

    - name: Copy agentc to dist folder
      run: |
        mkdir -p ./dist
        cp ./AgentC/agentc ./dist/agentc-linux-x86

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet HEAD; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --global user.email "github-actions@example.com"
        git config --global user.name "GitHub Actions"
        git add ./dist/agentc-linux-x86
        git commit -m "Add agentc-linux-x86 to dist folder"
        git push "https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
